version: "3.10"


x-common-variables: &common-variables
  POSTGRES_USER: db_user
  POSTGRES_PASSWORD: db_pass
  POSTGRES_DB: orders_db
  POSTGRES_PORT: 5432
  AUTH_URL: http://auth-service:8000/api/users
  REDIS_PORT: 6379
  REDIS_HOST: redis-service
  RABBITMQ_USER: guest
  RABBITMQ_PASSWORD: guest
  RABBITMQ_HOST: rabbitmq-service

x-test-variables: &test-variables
  POSTGRES_USER: db_user
  POSTGRES_PASSWORD: db_pass
  POSTGRES_DB: orders_db_test
  POSTGRES_PORT: 5432
  REDIS_PORT: 6379
  REDIS_HOST: redis-service
  RABBITMQ_USER: guest
  RABBITMQ_PASSWORD: guest
  RABBITMQ_HOST: rabbitmq-service


services:
  redis-service:
    image: "redis:7.0.10-bullseye"
    networks:
      - backend-network
    volumes:
      - "redis_data:/redis_data"
    ports:
      - "6380:6379"

  db-service:
    image: postgres:15-alpine
    volumes:
      - "postgres_data:/var/lib/postgresql/data/"
    ports:
      - "5431:5432"
    expose:
      - 5431
    environment: *common-variables
    networks:
      - backend-network

  rabbitmq-service:
    image: rabbitmq:3.13-alpine
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq/data/"
    networks:
      - backend-network
    hostname: rabbitmq
    restart: always
    environment: *common-variables
    ports:
      - "5671:5672"

  web-service:
    build: .
    volumes:
      - ./src:/app/src
    environment:
      <<: *common-variables
      PG_HOST: db-service
    ports:
      - "80:8000"
    networks:
      - backend-network
    depends_on:
      - db-service
      - redis-service
      - rabbitmq-service
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  test-db-service:
    profiles:
      - testing
    image: postgres:15-alpine
    volumes:
      - postgres_test_data:/var/lib/postgresql/data/
    ports:
      - "5430:5432"
    expose:
      - 5430
    environment: *test-variables
    networks:
      - backend-network

  tests:
    profiles:
      - testing
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      <<: *test-variables
      POSTGRES_HOST: test-db-service
    ports:
      - "8001:8000"
    networks:
      - backend-network
    depends_on:
      - test-db-service
      - redis-service
    command: /testing/commands/start_dev.sh

networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data:
  postgres_test_data:
  redis_data:
  rabbitmq_data:
